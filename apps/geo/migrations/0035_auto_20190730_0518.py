# Generated by Django 2.1.10 on 2019-07-30 05:18

from django.db import migrations, models
from utils.files import generate_json_file_for_upload


def migrate_data_to_file(apps, schema_editor):
    AdminLevel = apps.get_model('geo', 'AdminLevel')
    print('\n\t>> Migrating from JSONFIELD to FileField for AdminLevels: ')
    for admin_level in AdminLevel.objects.all():
        print(f'\t\t>> {admin_level}:{admin_level.title}')
        if admin_level.geojson:
            admin_level.geojson_file.save(
                f'admin-level-{admin_level.pk}.json',
                generate_json_file_for_upload(admin_level.geojson)
            )
            print(f'\t\t\t>> Geojson: {admin_level.geojson_file}')

        if admin_level.bounds:
            bounds = {
                'minX': admin_level.bounds['min_x'],
                'minY': admin_level.bounds['min_y'],
                'maxX': admin_level.bounds['max_x'],
                'maxY': admin_level.bounds['max_y'],
            }
            admin_level.bounds_file.save(
                f'admin-level-{admin_level.pk}.json',
                generate_json_file_for_upload({'bounds': bounds})
            )
            print(f'\t\t\t>> Bounds: {admin_level.bounds_file}')


class Migration(migrations.Migration):

    dependencies = [
        ('geo', '0034_auto_20190429_0624'),
    ]

    operations = [
        # Add new fields for File
        migrations.AddField(
            model_name='adminlevel',
            name='bounds_file',
            field=models.FileField(blank=True, default=None, max_length=255, null=True, upload_to='geo-bounds/'),
        ),
        migrations.AddField(
            model_name='adminlevel',
            name='geojson_file',
            field=models.FileField(blank=True, default=None, max_length=255, null=True, upload_to='geojson/'),
        ),

        # Migrate Data from JSONFIELD to File
        migrations.RunPython(migrate_data_to_file, reverse_code=migrations.RunPython.noop),
    ]
