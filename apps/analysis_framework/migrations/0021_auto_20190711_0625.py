# Generated by Django 2.1.9 on 2019-07-11 06:25

from django.db import migrations


def add_owner_memberships_to_old_frameworks(apps, schema_editor):
    AF = apps.get_model('analysis_framework', 'AnalysisFramework')
    AFMembership = apps.get_model('analysis_framework', 'AnalysisFrameworkMembership')
    AFRole = apps.get_model('analysis_framework', 'AnalysisFrameworkRole')

    priv_role = AFRole.objects.get(
        can_add_user=True,
        can_clone_framework=False,
        can_edit_framework=True,
        can_use_in_other_projects=True
    )

    pub_role = AFRole.objects.get(
        can_add_user=True,
        can_clone_framework=True,
        can_edit_framework=True,
        can_use_in_other_projects=True
    )

    for af in AF.objects.all():
        if not AFMembership.objects.filter(framework=af, member=af.created_by).exists():
            # Means creator's membership does not exist, So create one
            owner_role = priv_role if af.is_private else pub_role
            AFMembership.objects.create(
                framework=af,
                member=af.created_by,
                joined_at=af.created_at,
                role=owner_role
            )


class Migration(migrations.Migration):

    dependencies = [
        ('analysis_framework', '0020_auto_20190625_0542'),
    ]

    operations = [
        migrations.RunPython(add_owner_memberships_to_old_frameworks),
    ]
