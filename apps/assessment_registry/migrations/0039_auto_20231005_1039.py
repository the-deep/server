# Generated by Django 3.2.17 on 2023-10-05 10:39

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('assessment_registry', '0038_auto_20230915_0803'),
    ]

    operations = [
        migrations.AlterField(
            model_name='assessmentregistry',
            name='bg_crisis_start_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='assessmentregistry',
            name='bg_crisis_type',
            field=models.IntegerField(choices=[(1, 'Earthquake'), (2, 'Ground Shaking'), (3, 'Tsunami'), (4, 'Volcano'), (5, 'Volcanic Eruption'), (6, 'Mass Movement (Dry)'), (7, 'Rockfall'), (8, 'Avalance'), (9, 'Landslide'), (10, 'Subsidence'), (11, 'Extra Tropical Cyclone'), (12, 'Tropical Cyclone'), (13, 'Local/Convective Strom'), (14, 'Flood/Rain'), (15, 'General River Flood'), (16, 'Flash Flood'), (17, 'Strom surge/Coastal Flood'), (18, 'Mass Movement (wet)'), (19, 'Extreme Temperature'), (20, 'Heat Wave'), (21, 'Cold Wave'), (22, 'Extreme Weather Conditions'), (23, 'Drought'), (24, 'Wildfire'), (25, 'Population displacement'), (26, 'Conflict'), (27, 'Economic'), (28, 'Epidemic')]),
        ),
        migrations.AlterField(
            model_name='assessmentregistry',
            name='bg_preparedness',
            field=models.IntegerField(choices=[(1, 'With preparedness'), (2, 'Without preparedness')]),
        ),
        migrations.AlterField(
            model_name='assessmentregistry',
            name='coordinated_joint',
            field=models.IntegerField(choices=[(1, 'Coordinated - Joint'), (2, 'Coordinated - Harmonized'), (3, 'Uncoordinated')]),
        ),
        migrations.AlterField(
            model_name='assessmentregistry',
            name='details_type',
            field=models.IntegerField(choices=[(3, 'Initial'), (2, 'Rapid'), (1, 'In-depth'), (4, 'Monitoring'), (6, 'Registration'), (5, 'Other')]),
        ),
        migrations.AlterField(
            model_name='assessmentregistry',
            name='external_support',
            field=models.IntegerField(choices=[(1, 'External support received'), (2, 'No external support received')]),
        ),
        migrations.AlterField(
            model_name='assessmentregistry',
            name='family',
            field=models.IntegerField(choices=[(1, 'Displacement Tracking Matrix'), (2, 'Multi Cluster Initial and Rapid Assessment (MIRA)'), (3, 'Multi Sectoral Needs Assessment (MSNA)'), (4, 'Emergency Food Security Assessment (EFSA)'), (5, 'Comprehensive Food Security and Vulnerability Analysis (CFSVA)'), (6, 'Protection Monitoring'), (7, 'Humanitarian Needs Overview (HNO)'), (8, 'Briefing Note'), (9, 'Registration'), (10, 'IDPs profiling exercise'), (11, 'Census'), (12, 'Refugee and Migrant Response Plan (RMRP)'), (13, 'Refugee Response Plan (RRP)'), (14, 'Smart Nutrition Survey'), (15, 'Other')]),
        ),
        migrations.AlterField(
            model_name='assessmentregistry',
            name='focuses',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(choices=[(1, 'Context'), (2, 'Shock/Event'), (3, 'Displacement'), (4, 'Casualties'), (5, 'Information & Communication'), (6, 'Humanitarian Access'), (7, 'Impact (scope & Scale)'), (8, 'Humanitarian Conditions'), (9, 'People at risk'), (10, 'Priorities & Preferences'), (11, 'Response & Capacities')]), default=list, size=None),
        ),
        migrations.AlterField(
            model_name='assessmentregistry',
            name='language',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(choices=[(1, 'English'), (2, 'French'), (3, 'Spanish'), (4, 'Arabic'), (5, 'Portugese')]), size=None),
        ),
        migrations.AlterField(
            model_name='assessmentregistry',
            name='protection_info_mgmts',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(choices=[(1, 'Protection Monitoring'), (2, 'Protection Needs Assessment'), (3, 'Case Management'), (4, 'Population Data'), (5, 'Protection Response M&E'), (6, 'Communicating with(in) Affected Communities'), (7, 'Security & Situational Awareness'), (8, 'Sectoral Systems/Other')]), blank=True, default=list, size=None),
        ),
        migrations.AlterField(
            model_name='assessmentregistry',
            name='sectors',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(choices=[(1, 'Food Security'), (2, 'Health'), (3, 'Shelter'), (4, 'Wash'), (5, 'Protection'), (6, 'Nutrition'), (7, 'Livelihood'), (8, 'Education'), (9, 'Logistics'), (10, 'Inter/Cross Sector')]), default=list, size=None),
        ),
        migrations.AlterField(
            model_name='assessmentregistryorganization',
            name='organization_type',
            field=models.IntegerField(choices=[(1, 'Lead Organization'), (2, 'International Partners'), (3, 'National Partners'), (4, 'Donor'), (5, 'Government')]),
        ),
        migrations.AlterField(
            model_name='question',
            name='sector',
            field=models.IntegerField(choices=[(1, 'Relevance'), (2, 'Comprehensiveness'), (3, 'Ethics'), (4, 'Methodological rigor'), (5, 'Analytical value'), (6, 'Timeliness'), (7, 'Effective communication'), (8, 'Use'), (9, 'People-centred and inclusive'), (10, 'Accountability to Affected Populations'), (11, 'Do no harm'), (12, 'Designed with a purpose'), (13, 'Competency and capacity'), (14, 'Impartiality'), (15, 'Coordination and data minimization'), (16, 'Joint analysis'), (17, 'Acknowledge dissenting voices in joint needs analysis'), (18, 'Informed consent, confidentiality and data security'), (19, 'Sharing results (data and analysis)'), (20, 'Transparency between actors'), (21, 'Minimum technical standards')]),
        ),
        migrations.AlterField(
            model_name='question',
            name='sub_sector',
            field=models.IntegerField(choices=[(1, 'Relevance'), (2, 'Geographic comprehensiveness'), (3, 'Sectoral comprehensiveness'), (4, 'Affected and vulnerable groups comprehensiveness'), (5, 'Safety and protection'), (6, 'Humanitarian principles'), (7, 'Contribution'), (8, 'Transparency'), (9, 'Mitigating bias'), (10, 'Participation'), (11, 'Context specificity'), (12, 'Analytical standards'), (13, 'Description'), (14, 'Explanation'), (15, 'Interpretation'), (16, 'Anticipation'), (17, 'Timeliness'), (18, 'User-friendly presentation'), (19, 'Active dissemination'), (20, 'Use for collective planning'), (21, 'Buy-in and use by humanitarian clusters / sectors'), (22, 'Buy-in and use by UN agencies'), (23, 'Buy-in and use by international non-governmental organizations (INGOs)'), (24, 'Buy-in and use by local non-governmental organizations (local NGOs)'), (25, 'Buy-in and use by members of the Red Cross / Red Crescent Movement'), (26, 'Buy-in and use by donors'), (27, 'Buy-in and use by national and local government agencies'), (28, 'Buy-in and use by development and stabilization actors')]),
        ),
        migrations.AlterField(
            model_name='scoreanalyticaldensity',
            name='sector',
            field=models.IntegerField(choices=[(1, 'Food Security'), (2, 'Health'), (3, 'Shelter'), (4, 'Wash'), (5, 'Protection'), (6, 'Nutrition'), (7, 'Livelihood'), (8, 'Education'), (9, 'Logistics'), (10, 'Inter/Cross Sector')]),
        ),
        migrations.AlterField(
            model_name='summaryfocus',
            name='sector',
            field=models.IntegerField(choices=[(1, 'Food Security'), (2, 'Health'), (3, 'Shelter'), (4, 'Wash'), (5, 'Protection'), (6, 'Nutrition'), (7, 'Livelihood'), (8, 'Education'), (9, 'Logistics'), (10, 'Inter/Cross Sector')]),
        ),
        migrations.AlterField(
            model_name='summarysubdimensionissue',
            name='sector',
            field=models.IntegerField(choices=[(1, 'Food Security'), (2, 'Health'), (3, 'Shelter'), (4, 'Wash'), (5, 'Protection'), (6, 'Nutrition'), (7, 'Livelihood'), (8, 'Education'), (9, 'Logistics'), (10, 'Inter/Cross Sector')]),
        ),
    ]
